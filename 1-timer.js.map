{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'flatpickr/dist/themes/material_blue.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst dataPicker = document.querySelector('#datetime-picker');\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.warning({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n      return;\n    }\n    userSelectedDate = selectedDate;\n    startBtn.disabled = false;\n  },\n};\n\nflatpickr(dataPicker, options);\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n  return { days, hours, minutes, seconds };\n}\n\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  startBtn.disabled = true;\n  dataPicker.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const timeLeft = userSelectedDate - now;\n\n    if (timeLeft <= 0) {\n      clearInterval(timerId);\n      updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      dataPicker.disabled = false;\n      return;\n    }\n    updateTimerDisplay(convertMs(timeLeft));\n  }, 1000);\n});\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent =\n    addLeadingZero(seconds);\n}\n"],"names":["startBtn","dataPicker","userSelectedDate","timerId","options","selectedDates","selectedDate","iziToast","flatpickr","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","timeLeft","updateTimerDisplay"],"mappings":"+IAOA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAa,SAAS,cAAc,kBAAkB,EAE5D,IAAIC,EAAmB,KACnBC,EAAU,KAEd,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EACpC,GAAIC,GAAgB,IAAI,KAAQ,CAC9BC,EAAS,QAAQ,CACf,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDP,EAAS,SAAW,GACpB,MACD,CACDE,EAAmBI,EACnBN,EAAS,SAAW,EACrB,CACH,EAEAQ,EAAUP,EAAYG,CAAO,EAE7B,SAASK,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EACzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EACjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAhB,EAAS,iBAAiB,QAAS,IAAM,CAClCE,IAELF,EAAS,SAAW,GACpBC,EAAW,SAAW,GAEtBE,EAAU,YAAY,IAAM,CAE1B,MAAMc,EAAWf,EADL,IAAI,KAGhB,GAAIe,GAAY,EAAG,CACjB,cAAcd,CAAO,EACrBe,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChEjB,EAAW,SAAW,GACtB,MACD,CACDiB,EAAmBP,EAAUM,CAAQ,CAAC,CACvC,EAAE,GAAI,EACT,CAAC,EAED,SAASC,EAAmB,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7D,SAAS,cAAc,aAAa,EAAE,YAAcP,EAAeI,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcJ,EAAeK,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCL,EAAeM,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCN,EAAeO,CAAO,CAC1B"}